swagger: "2.0"
info:
  description: "Abaixo estao listados todos os possíveis end-points da API de votação em assembléia. Todos os end-points são públicos, nenhuma configuração de segurança é necessária para efetuar requisições."
  version: "0.0.1"
  title: "Assembleia API"
  contact:
    email: "daniloalexandre@gmail.com"
host: "localhost:8081"
basePath: "/v1/assembleia"
tags:
- name: "pauta"
  description: "Uma pauta é um assunto que pode ser votado em assembleia."
- name: "votação"
  description: "Toda decisão a ser tomada em um pauta exige uma votação"

schemes:
- "http"
paths:
  /pautas:
    post:
      tags:
      - "pauta"
      summary: "Adiciona uma nova pauta"
      description: ""
      operationId: "postPauta"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "A pauta que deve ser adicionada"
        required: true
        schema:
          $ref: "#/definitions/PautaRequest"
      responses:
        "200":
          description: "Sucess"
          schema:
            $ref: "#/definitions/PautaResponse"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErroResponsePostPauta"
    get:
      tags:
      - "pauta"
      summary: "Lista as pautas existentes"
      description: ""
      operationId: "getPautas"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Sucess"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PautaResponse"
  /pautas/{pautaId}:
    get:
      tags:
      - "pauta"
      summary: "Busca pautas pelo ID"
      description: "Returna um pauta"
      operationId: "getPautaById"
      produces:
      - "application/json"
      parameters:
      - name: "pautaId"
        in: "path"
        description: "ID da pauta a ser retornada"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Sucess"
          schema:
            $ref: "#/definitions/PautaResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErroResponseGetPauta"
    delete:
      tags:
      - "pauta"
      summary: "Remove uma pauta"
      description: ""
      operationId: "deletePauta"
      produces:
      - "application/json"
      parameters:
      - name: "pautaId"
        in: "path"
        description: "Id da pauta a ser removida"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Sucesso"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErroResponseGetPauta"
  /votacoes:
    post:
      tags:
      - "votação"
      summary: "Adiciona uma nova votação"
      description: ""
      operationId: "postVotacao"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "A votação que deve ser adicionada"
        required: true
        schema:
          $ref: "#/definitions/VotacaoRequest"
      responses:
        "200":
          description: "Sucess"
          schema:
            $ref: "#/definitions/VotacaoResponse"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErroResponsePostVotacao"
    get:
      tags:
      - "votação"
      summary: "Lista as votações existentes"
      description: ""
      operationId: "getVotacoes"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VotacaoResponse"
  /votacoes/{votacaoId}:
    get:
      tags:
      - "votação"
      summary: "Busca votações pelo ID"
      description: "Returna uma votação"
      operationId: "getVotacaoById"
      produces:
      - "application/json"
      parameters:
      - name: "votacaoId"
        in: "path"
        description: "ID da votação a ser retornada"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Sucess"
          schema:
            $ref: "#/definitions/VotacaoResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErroResponseGetVotacao"
    delete:
      tags:
      - "votação"
      summary: "Remove uma votação"
      description: ""
      operationId: "deleteVotacao"
      produces:
      - "application/json"
      parameters:
      - name: "votacaoId"
        in: "path"
        description: "Id da votação a ser removida"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Sucesso"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErroResponseGetVotacao"
  /votacoes/{votacaoId}/votos:
    post:
      tags:
      - "votação"
      summary: "Registra um novo voto para a votação"
      description: ""
      operationId: "postVoto"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "votacaoId"
        in: "path"
        description: "Id da votação"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "A votação que deve ser adicionada"
        required: true
        schema:
          $ref: "#/definitions/VotoRequest"
      responses:
        "200":
          description: "Sucess"
          schema:
            $ref: "#/definitions/VotoResponse"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErroResponseBadRequestVoto"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErroResponseForbiddenVoto"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErroResponseNotFoundVoto"
        "406":
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErroResponseNotAcceptableVoto"
    get:
      tags:
      - "votação"
      summary: "Lista os votos existentes em uma votação"
      description: ""
      operationId: "getVotos"
      produces:
      - "application/json"
      parameters:
      - name: "votacaoId"
        in: "path"
        description: "Id da votação"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VotoResponse"
  /votacoes/{votacaoId}/resultado:
    get:
      tags:
      - "votação"
      summary: "Busca o resultado de uma votação"
      description: ""
      operationId: "getResultado"
      produces:
      - "application/json"
      parameters:
      - name: "votacaoId"
        in: "path"
        description: "Id da votação"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Sucess"
          schema:
            $ref: "#/definitions/VotacaoResultadoResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErroResponseForbiddenResultado"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErroResponseGetVotacao"
definitions:
  PautaRequest:
    type: "object"
    required:
    - "descricao"
    properties:
      descricao:
        type: "string"
        example: "primeira pauta"
    xml:
      name: "Pauta"
  PautaResponse:
    type: "object"
    required:
    - "id"
    - "descricao"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: "1"
      descricao:
        type: "string"
        example: "primeira pauta"
  ErroResponsePostPauta:
    type: "object"
    required:
    - "timestamp"
    - "errors"
    properties:
      timestamp:
        type: "string"
        format: "yyyy-MM-ddThh:mm:ss.SSSSSSS"
        example: "2021-03-08T00:52:40.8247272"
      errors:
        type: "array"
        items:
          type: "string"
        example: ["descrição é requerida"]
  ErroResponseGetPauta:
    type: "object"
    required:
    - "timestamp"
    - "errors"
    properties:
      timestamp:
        type: "string"
        format: "yyyy-MM-ddThh:mm:ss.SSSSSSS"
        example: "2021-03-08T00:52:40.8247272"
      errors:
        type: "array"
        items:
          type: "string"
        example: ["Pauta não encontrada"]
  VotacaoRequest:
    type: "object"
    required:
    - "id_pauta"
    properties:
      duracao_minutos:
        type: "integer"
        format: "int64"
        example: "10"
      id_pauta:
        type: "integer"
        format: "int64"
        example: "10"
  VotacaoResponse:
    type: "object"
    required:
    - "id"
    - "descricao"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: "1"
      prazo:
        type: "string"
        format: "yyyy-MM-ddThh:mm:ss.SSSSSSS"
        example: "2021-03-08T00:52:40.8247272"
      pauta:
        $ref: "#/definitions/PautaResponse"
  ErroResponsePostVotacao:
    type: "object"
    required:
    - "timestamp"
    - "errors"
    properties:
      timestamp:
        type: "string"
        format: "yyyy-MM-ddThh:mm:ss.SSSSSSS"
        example: "2021-03-08T00:52:40.8247272"
      errors:
        type: "array"
        items:
          type: "string"
        example: ["id_pauta: deve ser maior que ou igual a 1"]
  ErroResponseGetVotacao:
    type: "object"
    required:
    - "timestamp"
    - "errors"
    properties:
      timestamp:
        type: "string"
        format: "yyyy-MM-ddThh:mm:ss.SSSSSSS"
        example: "2021-03-08T00:52:40.8247272"
      errors:
        type: "array"
        items:
          type: "string"
        example: ["Votação não encontrada"]
  VotoRequest:
    type: "object"
    required:
    - "favoravel"
    - "cpf"
    properties:
      favoravel:
        type: boolean
      cpf:
        type: "string"
        format: "NNNNNNNNNNN"
        example: "012345678910"
  VotoResponse:
    type: "object"
    required:
    - "id"
    - "favoravel"
    - "cpf"
    - "timestamp"
    - "votacao"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: "1"
      favoravel:
        type: boolean
      cpf:
        type: "string"
        format: "NNNNNNNNNNN"
        example: "012345678910"
      timestamp:
        type: "string"
        format: "yyyy-MM-ddThh:mm:ss.SSSSSSS"
        example: "2021-03-08T00:52:40.8247272"
      votacao:
        $ref: "#/definitions/VotacaoResponse"
  ErroResponseBadRequestVoto:
    type: "object"
    required:
    - "timestamp"
    - "errors"
    properties:
      timestamp:
        type: "string"
        format: "yyyy-MM-ddThh:mm:ss.SSSSSSS"
        example: "2021-03-08T00:52:40.8247272"
      errors:
        type: "array"
        items:
          type: "string"
        example: ["id_votacao: deve ser maior que ou igual a 1"]
  ErroResponseNotFoundVoto:
    type: "object"
    required:
    - "timestamp"
    - "errors"
    properties:
      timestamp:
        type: "string"
        format: "yyyy-MM-ddThh:mm:ss.SSSSSSS"
        example: "2021-03-08T00:52:40.8247272"
      errors:
        type: "array"
        items:
          type: "string"
        example: ["Votação não encontrada",
                  "Associado com cpf 12345678910 não encontrado"]
  ErroResponseNotAcceptableVoto:
    type: "object"
    required:
    - "timestamp"
    - "errors"
    properties:
      timestamp:
        type: "string"
        format: "yyyy-MM-ddThh:mm:ss.SSSSSSS"
        example: "2021-03-08T00:52:40.8247272"
      errors:
        type: "array"
        items:
          type: "string"
        example: ["Voto não pode ser efetuado. Período de votação expirado."]
  ErroResponseForbiddenVoto:
    type: "object"
    required:
    - "timestamp"
    - "errors"
    properties:
      timestamp:
        type: "string"
        format: "yyyy-MM-ddThh:mm:ss.SSSSSSS"
        example: "2021-03-08T00:52:40.8247272"
      errors:
        type: "array"
        items:
          type: "string"
        example: ["Voto já computado",
                  "Associado com cpf 12345678910 não autorizado"]
  VotacaoResultadoResponse:
    type: "object"
    required:
    - "favoravel"
    - "desfavoravel"
    - "votacao"
    properties:
      favoravel:
        type: "integer"
        format: "int64"
        example: "1"
      desfavoravel:
        type: "integer"
        format: "int64"
        example: "1"
      votacao:
        $ref: "#/definitions/VotacaoResponse"
  ErroResponseForbiddenResultado:
    type: "object"
    required:
    - "timestamp"
    - "errors"
    properties:
      timestamp:
        type: "string"
        format: "yyyy-MM-ddThh:mm:ss.SSSSSSS"
        example: "2021-03-08T00:52:40.8247272"
      errors:
        type: "array"
        items:
          type: "string"
        example: ["A votação ainda não foi encerrada"]